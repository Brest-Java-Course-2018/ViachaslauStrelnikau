<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="placeholderConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:rest.properties</value>
            </list>
        </property>
    </bean>
    <context:component-scan base-package="com.epam.brest.client_rest"/>
    <context:annotation-config/>

    <bean id="RestTemplateMock" class="org.easymock.EasyMock" factory-method="createMock">
        <constructor-arg value="org.springframework.web.client.RestTemplate"/>
    </bean>
    <bean id="departmentService" class="com.epam.brest.client_rest.DepartmentConsumerRest">
        <constructor-arg index="0" value="${PROTOCAL}://${HOST}:${PORT}/${point.departments}"/>
        <constructor-arg index="1" ref="RestTemplateMock"/>
    </bean>


    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean id="departmentServiceReal" class="com.epam.brest.client_rest.DepartmentConsumerRest">
        <constructor-arg index="0" value="${PROTOCAL}://${HOST}:${PORT}/${point.departments}"/>
        <constructor-arg ref="restTemplate"/>
    </bean>

</beans>